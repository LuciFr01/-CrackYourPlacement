class Solution {
public:
    string reorganizeString(string s) {
        string ans;
        unordered_map <char,int> mp;
        for(auto it:s)
        mp[it]++;
        priority_queue <pair<int,char>,vector<pair<int,char>>> pq;
        for(auto it:mp){
            pq.push({it.second,it.first});
        }
        pair<int, char> prev = {-1, '*'};
        while (!pq.empty()) {
        auto current = pq.top();
        pq.pop();
        ans += current.second;
        if (prev.first > 0) {
            pq.push(prev);
        }
        current.first--;
        prev = current;
    }
    if (ans.length() == s.length()) {
        return ans;
    } else {
        return "";
    }
    }
};
