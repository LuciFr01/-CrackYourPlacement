class Solution {
  public:
  void dfs(int node,vector<bool>& visited,vector<int> adj[],vector<int>& component){
      component.push_back(node);
      visited[node]=true;
      for(auto it: adj[node]){
          if(!visited[it])
          dfs(it,visited,adj,component);
      }
      
  }
    
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
      vector<int> ans;
      vector<bool> visited(V,false);
      vector<int> component;
      for(int i=0;i<V;i++){
          if(!visited[i]){
              dfs(i,visited,adj,component);
              for(auto it:component)
              ans.push_back(it);
          }
      }
      return ans;
    }
};
