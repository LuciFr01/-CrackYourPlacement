/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* insertattail(ListNode* &head, ListNode* &tail, int val){
        ListNode* temp = new ListNode(val);
        if(head == NULL){
            head = temp;
            tail = temp;
        }
        else{
            tail -> next = temp;
            tail = temp;
        }
        return head;

    }
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* anshead = NULL;
        ListNode* anstail = NULL;

        ListNode* temp = head;
        while(temp != NULL){
            if(temp -> next == NULL || temp -> val != temp -> next -> val){
                insertattail(anshead,anstail,temp -> val);
                temp = temp -> next;
            }
            else {
                int del = temp -> val;
                while(temp != NULL && temp -> val == del){
                    temp = temp -> next;
                }

            }
            
        }
        return anshead;
    }
};
