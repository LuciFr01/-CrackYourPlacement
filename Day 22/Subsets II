class Solution {
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>>res;
        set<vector<int>>rescue;
        vector<int>curr;
        dfs(nums,0,curr,rescue);
        for(auto elm: rescue)
        {
            res.push_back(elm);
        }
        return res;
        
    }
    void dfs(vector<int>nums, int start, vector<int>&curr, set<vector<int>> & rescue)
    {
        vector<int> temp=curr;
        sort(temp.begin(),temp.end());
        rescue.insert(temp);
        for(int i=start;i<nums.size();i++)
        {
            curr.push_back(nums[i]);
            dfs(nums,i+1,curr,rescue);
            curr.pop_back();
        }
    }
};
