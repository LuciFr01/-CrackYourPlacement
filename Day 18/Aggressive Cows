#include <iostream>
#include <bits/stdc++.h>
using namespace std;

bool isPossible(vector<int>& stalls, int N, int x, int C) {
    int cows = 1, last = stalls[0];
    for (int i = 1; i < N; i++) {
        if (stalls[i] - last >= x) {
            last = stalls[i];
            cows++;
        }
    }
    return cows >= C;
}

void solve(vector<int>& stalls, int N, int C, int& lo, int& hi) {
    if (hi < lo)
        return;
    int mid = (hi + lo) / 2;
    if (isPossible(stalls, N, mid, C))
        lo = mid + 1;
    else
        hi = mid - 1;
    solve(stalls, N, C, lo, hi);
}

int main() {
    int T;
    cin >> T;
    for (int test = 0; test < T; test++) {
        int N, C;
        cin >> N >> C;
        vector<int> stalls(N, 0);
        for (int i = 0; i < N; i++)
            cin >> stalls[i];
        sort(stalls.begin(), stalls.end());
        int lo = 0, hi = stalls[N - 1] - stalls[0];
        solve(stalls, N, C, lo, hi);
        cout << lo - 1 << endl;
    }
    return 0;
}
